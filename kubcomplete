function kub(){
    local kubeconfig=""
    local inject_kubeconfig=0

    if [[ ! "$*" =~ --kubeconfig ]]; then  # don't append kubeconfig if one specified
        if [ -e "kubeconfig" ]; then
            kubeconfig="--kubeconfig=kubeconfig"
        else
            if [ -e "$HOME/.kubeconfig" ]; then
                kubeconfig="--kubeconfig=$HOME/.kubeconfig"
            fi
        fi
        /usr/bin/env kubectl "$kubeconfig" "$@"
    else
        /usr/bin/env kubectl "$@"
    fi
}

_build_command(){
    local tokens=( $COMP_LINE )

    KUBECMD=${tokens[0]}

    for i in "${!tokens[@]}"; do
        word=${tokens[$i]}
        case "$word" in
            --kubeconfig=*|--namespace=*|--user=*)   KUBECMD="${KUBECMD} $word";;
            --kubeconfig |--namespace |--user )      KUBECMD="${KUBECMD} $word ${tokens[$((i+1))]}";;
        esac
    done

}

_set_kub_sub_commands(){

    local kub_help=$(kubectl --help)
    local in_commands=0
    KUB_SUB_COMMANDS=""
    while read -r line; do
        if [[ $line =~ "Available Commands:" ]]; then
            in_commands=1
        else if [[ $line = "" ]] && [[ $in_commands != 0 ]]; then
                 break
             else if [[ $in_commands != 0 ]]; then
                      first_word=(${line// / })
                      KUB_SUB_COMMANDS="${first_word} ${KUB_SUB_COMMANDS}"
                  fi
             fi
        fi
    done <<< "$kub_help"

}

_kubectl-complete()
{
  local cmd="${1##*/}"
  local line=${COMP_LINE}
  local prev=${COMP_WORDS[COMP_CWORD-1]}
  local cur=${COMP_WORDS[COMP_CWORD]}

  known_words="exec|logs|pods|rc|replicationcontrollers|rollingupdate|rolling-update|get|describe|services"
  last_recognized=""

  for word in $line; do
      if [[ $word =~ $known_words ]]; then
          last_recognized=$word
      fi
  done

  _build_command
  COMPREPLY=()
  case "$last_recognized" in
      logs|exec|pod|pods)
          podlist=$(${KUBECMD} get pods)
          if [ $? = 0 ]; then
              pods=$(awk 'NR>1{print $1}' <<< "$podlist" )
              COMPREPLY=( $( compgen -W "$pods" -- $cur) )
          fi
          ;;
      replicationcontrollers|replicationcontroller|rc|rollingupdate|rolling-update)
          rclist=$(${KUBECMD} get rc)
          if [ $? = 0 ]; then
              rc=$(awk 'NR>1{print $1}' <<< "$rclist" )
              COMPREPLY=( $( compgen -W "$rc" -- $cur) )
          fi
          ;;
      service|services)
          rclist=$(${KUBECMD} get services)
          if [ $? = 0 ]; then
              rc=$(awk 'NR>1{print $1}' <<< "$rclist" )
              COMPREPLY=( $( compgen -W "$rc" -- $cur) )
          fi
          ;;
      get|describe)
          COMPREPLY=( $( compgen -W "nodes pods services" -- $cur) )
          ;;
      *)
          COMPREPLY=( $( compgen -W "$KUB_SUB_COMMANDS" -- $cur) )

  esac

  return 0
}

complete -o default -F _kubectl-complete -o filenames kub
